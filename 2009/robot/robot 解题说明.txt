首先这是一道最优解, 所以很明显是动态规划. 但本题的难度明显高于普通的背包问题.

如果我们知道在第i时间且正好在第j路段能得到的最多金币，记为f(i,j), 则答案即为
max{f(m, j) | j = 1 ... n}.

我们把在第i时间能得到的最多金币数记为fmax[i], 显然:
fmax(i) = max {f(i,j) | j = 1 ... n};

f(i, j) = max {fmax(i-k) + coin(j-k) + coin(j-k+1) +...+coin (j) - cost(j-k) | 1 <= k <= p }
即, robot在j路段时有可能已经走了1步, 2步,...或p步. 如果走了k步，则在第j-k路段
买了机器人，并搜集了沿途的金币。
